app:
  namespace: "monitoring"
  grafana:
    admin:
      username: "admin"
      password: "admin"
  pvc:
    storageClassName: "local-path"
    accessModes: "ReadWriteOnce"
    resources:
      requests: "10Gi"
  monitor:
    name: "prometheus-service-monitor"
    namespace: "ligidi"

loki:
  enabled: false
  # Enabled by default
  chunksCache:
    persistence:
      # Persistence is disabled by default
      enabled: true
      # -- Storage class to be used.
      # If defined, storageClassName: <storageClass>.
      # If set to "-", storageClassName: "", which disables dynamic provisioning.
      # If empty or set to null, no storageClassName spec is
      # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
      storageClass: "local-path"

  deploymentMode: SingleBinary

  loki:
    containerSecurityContext:
      # Solved https://github.com/grafana/helm-charts/issues/1111
      # - grafana-error: /var/loki/chunks/fake/755005aa5e414340/MTgxMTNjOGM5MGI6MTgxMTQzNmE2NTI6M2RkYjQzYmQ=: no such file or directory
      # - found fix: https://community.grafana.com/t/query-error-loki-reporting-to-grafana-it-cant-find-chunks/61741/2
      readOnlyRootFilesystem: false

  singleBinary:
    persistence:
      # -- Storage class to be used.
      # If defined, storageClassName: <storageClass>.
      # If set to "-", storageClassName: "", which disables dynamic provisioning.
      # If empty or set to null, no storageClassName spec is
      # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
      storageClass: "local-path"

promtail:
  enabled: false
  config:
    # -- The config of clients of the Promtail server
    # Must be reference in `config.file` to configure `clients`
    # @default -- See `values.yaml`
    # @doc -- https://akyriako.medium.com/kubernetes-logging-with-grafana-loki-promtail-in-under-10-minutes-d2847d526f9e
    clients:
      - url: http://monitoring-loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push

prometheus:
  enabled: false
  grafana:
    ingress:
      enabled: true
      path: "/grafana"
    admin:
      existingSecret: "grafana-admin-secret"
    grafana.ini:
      server:
        domain: "ligid.africa"
        root_url: "https://ligid.africa/grafana"
        serve_from_sub_path: true
      security:
        allow_embedding: true
        cookie_secure: false
      auth:
        basic:
          enable: true
    persistence:
      enabled: true
      existingClaim: "prometheus-pv-claim"
    additionalDataSources:
      - name: Loki
        type: loki
        isDefault: false
        access: proxy
        url: "http://monitoring-loki-querier.monitoring.svc.cluster.local:3100"
  prometheus:
    prometheusSpec:
      logLevel: "debug"
      externalUrl: "/prometheus/"
      routePrefix: "/prometheus/"
      # To enable general ServiceMonitor discovery
      serviceMonitorSelectorNilUsesHelmValues: false